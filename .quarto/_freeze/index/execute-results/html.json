{
  "hash": "fad976c297eec2d3b347d4710f878d7c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"dvaghela - STAT 515 Mid Project\"\n---\n\n\nThis is a STAT 515 Mid Project website for group number - 29.\n\nThis is the original Graph which is about **Child mortality rate from 1960 to 2021:**\n\n![](images/child-mortality-1960-vs-latest-slope.png){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'plotly' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'plotly'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nchild_mortality_data = read.csv(\"child-mortality-1960-vs-latest-slope.csv\")\n\n\nhw <- theme_gray()+ theme(\n  plot.title=element_text(hjust=0.5),\n  plot.subtitle=element_text(hjust=0.5),\n  plot.caption=element_text(hjust=-.5),\n  \n  strip.text.y = element_blank(),\n  strip.background=element_rect(fill=rgb(.9,.95,1),\n                                colour=gray(.5), linewidth =.2),\n  \n  panel.border=element_rect(fill=FALSE,colour=gray(.70)),\n  panel.grid.minor.y = element_blank(),\n  panel.grid.minor.x = element_blank(),\n  panel.spacing.x = unit(0.10,\"cm\"),\n  panel.spacing.y = unit(0.05,\"cm\"),\n  \n  # axis.ticks.y= element_blank()\n  axis.ticks=element_blank(),\n  axis.text=element_text(colour=\"black\"),\n  axis.text.y=element_text(margin=margin(0,3,0,3)),\n  axis.text.x=element_text(margin=margin(-1,0,3,0))\n)\n\nfiltered_data = child_mortality_data %>% filter(!is.na(Continent)) %>%\n  filter(!is.na(Observation.value))\n\n\nlibrary(shiny)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'shiny' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Assuming your data frame is named 'filtered_data'\n\nui = fluidPage(\n  titlePanel(\"Observation Values Across Years\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"country\", \"Select a country:\",\n                  choices = unique(filtered_data$Entity))\n    ),\n    mainPanel(\n      plotlyOutput(\"plot\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  output$plot <- renderPlotly({\n    selected_country <- filtered_data[filtered_data$Entity == input$country, ]\n    \n    p <- ggplot(data = selected_country, aes(x = Year, y = Observation.value, fill = as.factor(Year))) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Observation Data Across Years for\", input$country),\n           x = \"Year\",\n           y = \"Observation.value\")\n    \n    ggplotly(p, tooltip = c(\"Year\", \"Observation.value\"))\n  })\n}\n\nshinyApp(ui = ui, server = server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n\n```{.r .cell-code}\n################################################################################################\n\ncountries = read.csv(\"cc.csv\")\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(plotly)\n\n\n# Remove rows with missing observation values\nchild_mortality_data <- child_mortality_data[!is.na(child_mortality_data$Observation.value), ]\n\n# Join the datasets based on country\nmerged_data = inner_join(countries, child_mortality_data, by = c(\"Country\" = \"Entity\"))\n\n\n# Calculate average child mortality rates per continent\navg_mortality_per_continent = merged_data %>%\n  group_by(Continent.x) %>%\n  summarize(Avg_Mortality = mean(Observation.value, na.rm = TRUE))\n\n# Plot the graph using Plotly\nplot = plot_ly(avg_mortality_per_continent, x = ~Continent.x, y = ~Avg_Mortality, type = 'bar',\n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%\n  layout(title = 'Average Child Mortality Rates per Continent',\n         xaxis = list(title = 'Continent'),\n         yaxis = list(title = 'Average Child Mortality Rate'))\n\n# Display the plot\nplot\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-516bcbbccd38acdb8661\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-516bcbbccd38acdb8661\">{\"x\":{\"visdat\":{\"60020273225\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"60020273225\",\"attrs\":{\"60020273225\":{\"x\":{},\"y\":{},\"marker\":{\"color\":\"rgb(158,202,225)\",\"line\":{\"color\":\"rgb(8,48,107)\",\"width\":1.5}},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Average Child Mortality Rates per Continent\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Continent\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"Africa\",\"Asia\",\"Europe\",\"North America\",\"Oceania\",\"South America\"]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Average Child Mortality Rate\"},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"Africa\",\"Asia\",\"Europe\",\"North America\",\"Oceania\",\"South America\"],\"y\":[14.979917466805778,8.3360817651839731,1.9634038865583634,5.9004125302240329,5.8525012822039857,6.5870618102574001],\"marker\":{\"color\":\"rgb(158,202,225)\",\"line\":{\"color\":\"rgb(8,48,107)\",\"width\":1.5}},\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}