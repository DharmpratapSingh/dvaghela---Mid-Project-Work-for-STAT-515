{"title":"dvaghela - STAT 515 Mid Project","markdown":{"yaml":{"title":"dvaghela - STAT 515 Mid Project"},"headingText":"Assuming your data frame is named 'filtered_data'","containsRefs":false,"markdown":"\n\nThis is a STAT 515 Mid Project website for group number - 29.\n\nThis is the original Graph which is about **Child mortality rate from 1960 to 2021:**\n\n![](images/child-mortality-1960-vs-latest-slope.png){fig-align=\"center\"}\n\n```{r}\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n\nchild_mortality_data = read.csv(\"child-mortality-1960-vs-latest-slope.csv\")\n\n\nhw <- theme_gray()+ theme(\n  plot.title=element_text(hjust=0.5),\n  plot.subtitle=element_text(hjust=0.5),\n  plot.caption=element_text(hjust=-.5),\n  \n  strip.text.y = element_blank(),\n  strip.background=element_rect(fill=rgb(.9,.95,1),\n                                colour=gray(.5), linewidth =.2),\n  \n  panel.border=element_rect(fill=FALSE,colour=gray(.70)),\n  panel.grid.minor.y = element_blank(),\n  panel.grid.minor.x = element_blank(),\n  panel.spacing.x = unit(0.10,\"cm\"),\n  panel.spacing.y = unit(0.05,\"cm\"),\n  \n  # axis.ticks.y= element_blank()\n  axis.ticks=element_blank(),\n  axis.text=element_text(colour=\"black\"),\n  axis.text.y=element_text(margin=margin(0,3,0,3)),\n  axis.text.x=element_text(margin=margin(-1,0,3,0))\n)\n\nfiltered_data = child_mortality_data %>% filter(!is.na(Continent)) %>%\n  filter(!is.na(Observation.value))\n\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nui = fluidPage(\n  titlePanel(\"Observation Values Across Years\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"country\", \"Select a country:\",\n                  choices = unique(filtered_data$Entity))\n    ),\n    mainPanel(\n      plotlyOutput(\"plot\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  output$plot <- renderPlotly({\n    selected_country <- filtered_data[filtered_data$Entity == input$country, ]\n    \n    p <- ggplot(data = selected_country, aes(x = Year, y = Observation.value, fill = as.factor(Year))) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Observation Data Across Years for\", input$country),\n           x = \"Year\",\n           y = \"Observation.value\")\n    \n    ggplotly(p, tooltip = c(\"Year\", \"Observation.value\"))\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n################################################################################################\n\ncountries = read.csv(\"cc.csv\")\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(plotly)\n\n\n# Remove rows with missing observation values\nchild_mortality_data <- child_mortality_data[!is.na(child_mortality_data$Observation.value), ]\n\n# Join the datasets based on country\nmerged_data = inner_join(countries, child_mortality_data, by = c(\"Country\" = \"Entity\"))\n\n\n# Calculate average child mortality rates per continent\navg_mortality_per_continent = merged_data %>%\n  group_by(Continent.x) %>%\n  summarize(Avg_Mortality = mean(Observation.value, na.rm = TRUE))\n\n# Plot the graph using Plotly\nplot = plot_ly(avg_mortality_per_continent, x = ~Continent.x, y = ~Avg_Mortality, type = 'bar',\n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%\n  layout(title = 'Average Child Mortality Rates per Continent',\n         xaxis = list(title = 'Continent'),\n         yaxis = list(title = 'Average Child Mortality Rate'))\n\n# Display the plot\nplot\n\n```\n","srcMarkdownNoYaml":"\n\nThis is a STAT 515 Mid Project website for group number - 29.\n\nThis is the original Graph which is about **Child mortality rate from 1960 to 2021:**\n\n![](images/child-mortality-1960-vs-latest-slope.png){fig-align=\"center\"}\n\n```{r}\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n\nchild_mortality_data = read.csv(\"child-mortality-1960-vs-latest-slope.csv\")\n\n\nhw <- theme_gray()+ theme(\n  plot.title=element_text(hjust=0.5),\n  plot.subtitle=element_text(hjust=0.5),\n  plot.caption=element_text(hjust=-.5),\n  \n  strip.text.y = element_blank(),\n  strip.background=element_rect(fill=rgb(.9,.95,1),\n                                colour=gray(.5), linewidth =.2),\n  \n  panel.border=element_rect(fill=FALSE,colour=gray(.70)),\n  panel.grid.minor.y = element_blank(),\n  panel.grid.minor.x = element_blank(),\n  panel.spacing.x = unit(0.10,\"cm\"),\n  panel.spacing.y = unit(0.05,\"cm\"),\n  \n  # axis.ticks.y= element_blank()\n  axis.ticks=element_blank(),\n  axis.text=element_text(colour=\"black\"),\n  axis.text.y=element_text(margin=margin(0,3,0,3)),\n  axis.text.x=element_text(margin=margin(-1,0,3,0))\n)\n\nfiltered_data = child_mortality_data %>% filter(!is.na(Continent)) %>%\n  filter(!is.na(Observation.value))\n\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Assuming your data frame is named 'filtered_data'\n\nui = fluidPage(\n  titlePanel(\"Observation Values Across Years\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"country\", \"Select a country:\",\n                  choices = unique(filtered_data$Entity))\n    ),\n    mainPanel(\n      plotlyOutput(\"plot\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  output$plot <- renderPlotly({\n    selected_country <- filtered_data[filtered_data$Entity == input$country, ]\n    \n    p <- ggplot(data = selected_country, aes(x = Year, y = Observation.value, fill = as.factor(Year))) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Observation Data Across Years for\", input$country),\n           x = \"Year\",\n           y = \"Observation.value\")\n    \n    ggplotly(p, tooltip = c(\"Year\", \"Observation.value\"))\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n################################################################################################\n\ncountries = read.csv(\"cc.csv\")\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(plotly)\n\n\n# Remove rows with missing observation values\nchild_mortality_data <- child_mortality_data[!is.na(child_mortality_data$Observation.value), ]\n\n# Join the datasets based on country\nmerged_data = inner_join(countries, child_mortality_data, by = c(\"Country\" = \"Entity\"))\n\n\n# Calculate average child mortality rates per continent\navg_mortality_per_continent = merged_data %>%\n  group_by(Continent.x) %>%\n  summarize(Avg_Mortality = mean(Observation.value, na.rm = TRUE))\n\n# Plot the graph using Plotly\nplot = plot_ly(avg_mortality_per_continent, x = ~Continent.x, y = ~Avg_Mortality, type = 'bar',\n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%\n  layout(title = 'Average Child Mortality Rates per Continent',\n         xaxis = list(title = 'Continent'),\n         yaxis = list(title = 'Average Child Mortality Rate'))\n\n# Display the plot\nplot\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","editor":"visual","theme":"cosmo","title":"dvaghela - STAT 515 Mid Project"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}